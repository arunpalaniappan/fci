m1
m2
summary(m1)
98 / (1 - 5.556e-14)
98 * (5.556e-14) / (1 - (5.556e-14))v
98 * (5.556e-14) / (1 - (5.556e-14))
?lm
x = c(5) * 10
x
?c
c(5) ** 10
c(5, ) * 10
?repeat
()
?repeat
()
help (repeat)
?sample
x = c(4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4)
y - seq(1:length(x))
y = seq(1:length(x))
lm(x, y)
fit <- lm(y ~ x)
fit
summary(fit)
x = seq(1:100)
x1 = x
x2 = 2*x
y = x1 + x2
df = data.frame(x1, x2, y)
lm(y ~ x1 + x2, df)
fit <- lm(y ~ x1 + x2, df)
summary(fit)
zeros(10)
zeroes(10)
ones(10)
x1 = seq(1:100)
x1 = x1 - x1
x2 = x3 = x1
for i in seq(1:100)
for(i in seq(1:100))
{}
for(i in seq(1:100))
{}
for(i in seq(1:100))
{
}
3 % 2
3 %% 2
3 mod 2
?%%
5 %% 2
for(i in seq(1:100))
{
if(i %% 3 == 0)
x1[i] = 1
else if(i %% 3 == 1)
x2[i] = 1
else
x3[i] = 1
}
x1[100]
x1[99]
x2[99]
sum(x1)
sum(x1) + sum(x2) + sum(x3)
y = seq(1:100)
temp = seq(2:101)
y = temp - y
y = seq(1:100)
y[1:10]
temp[1:10]
temp = seq(2:101)
temp = seq(2:102)
temp = temp + 1
temp[1:10]
length(temp)
temp = y
temp = temp + 1
y = temp - y
fit <- lm(y ~ x1 + x2 + x3)
fut
fit
fit[1]
fit[2]
dit[3]
fit[3]
fit[4]
fit[5]
fit[6]
fit[7]
fit[8]
fit
summary(fit)
getwd()
quit()
x = seq(-100, 100)
rm(list=lm())
rm(list())
?rm
ls()
rm(list = ls())
x = seq(-100, 100)
y = 3 + 0.00001*x
fit <- lm(y ~ x)
fit
summary(fit)
library(ggplt2)
ggplot(df, aes(x, y)) + geom_point()
ggplot2(df, aes(x, y)) + geom_point()
library(ggplot2)
ggplot(df, aes(x, y)) + geom_point()
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point()
summary(fit)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
?norm
?normif
?pnorm
rnorm(0, 0.1)
rnorm(10, 0, 0.01)
dim(y)
length(y)
y = y + rnorm(length(y), 0, 0.01)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
fit <- lm(y ~ x, df)
summary(fit)
y = y + rnorm(length(y), 0, 0.0001)
df = data.frame(x, y)
fit <- lm(y ~ x, df)
summary(fit)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
y = 3 + 0.0001*x
y = y + rnorm(length(y), 0, 0.0001)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
y = y + rnorm(length(y), 0, 0.001)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
y = y + rnorm(length(y), 0, 0.0001)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
y = y + rnorm(length(y), 0, 0.1)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
mean(df$y)
mean(df$y) - 3
(0 - mean(df$y) - 3) / (1.191e-04)
(0 - mean(df$y) - 3) / (1.191e-04)^2
(0 - mean(df$y) - 3) / (1.191e-04)^0.5
fit$call
fit$coefficients
fit$coefficients[1]
fit$coefficients[2]
fit$coefficients[2]
fit$effects
summary(fit)
fit$coefficients[2] / (1.191e-04)
fit$coefficients[1] / (6.911e-03)
y = 3 + 0.0001*x
y = y + rnorm(length(y), 0, 0.001)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
y = y + rnorm(length(y), 0, 0.01)
y = 3 + 0.0001*x
y = y + rnorm(length(y), 0, 0.01)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
y = y + rnorm(length(y), 0, 0.000001)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
y = 3 + 0.0001*x
y = y + rnorm(length(y), 0, 0.000001)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
y = 3 + 0.001*x
y = y + rnorm(length(y), 0, 0.1)
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
x = seq(1:200)
dim(x)
length(x)
c(0)*100
pnorm(1, 100, 0.01)
pnorm(1, 100, 0.01)
rnorm(1, 100, 0.01)
rnorm(1, 100, 0.01)
x = seq(1, 400)
y = rnorm(200, 100, 30)
y = c(y, rnorm(200, 50, 30))
length(y)
zeroes(100)
zeros(100)
zero(100)
ones(100)
rep(0, 100)
gender = c(rep(0, 100), rep(1, 100))
x = c(rep(0, 100), rep(1, 100))
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
x = c(rep(0, 200), rep(1, 200))
y = rnorm(200, 100, 30)
y = c(y, rnorm(200, 50, 30))
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
x = c(rep(0, 200), rep(1, 200))
y = rnorm(200, 100, 1)
y = c(y, rnorm(200, 50, 1))
df = data.frame(x, y)
ggplot(df, aes(x, y)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x)
summary(fit)
sample.int(12, 20)
sample.int(12, 20, replace=TRUE)
edu = sample.int(12, 400, replace=TRUE)
df = data.frame(x, y, edu)
ggplot(df, aes(x, edu)) + geom_point() + geom_smooth(method=lm)
fit <- lm(y ~ x + edu)
summary(fit)
salary = edu*1000 + x*2.3 + rnorm(1, 0, 10)
fit <- lm(salary ~ x + edu)
summary(fit)
x = c(rep(0, 200), rep(1, 200))
edu = sample.int(12, 400, replace=TRUE)
salary = edu*1000 + x*2.3 + rnorm(1, 0, 1000)
fit <- lm(salary ~ x + edu)
summary(fit)
quit()
data("cars")
View(cars)
View(cars)
rm(list=ls())
data("mtcars")
View(mtcars)
setwd("C:\Users\ARUN PALANIAPPAN\Desktop\A\SEM 9\DV")
data("mtcars")
View(mtcars)
dim(mtcars)
names(mtcars)
summary(mtcars)
index(mtcars)
quit()
data("chickwts")
View(chickwts)
data("ChickWeight")
View(ChickWeight)
df = ChickWeight
cor(df$Time, df$weight)
fit <- lm(df$weight ~ df$Time)
fit
norm(df$weight)
?norm
norm(c(1, 2, 3))
norm(c(1, 2, 3), "2")
norm(df$weight, "2")
df$Time = scale(df$Time)
df$weight = scale(df$weight)
cor(df$Time, df$weight)
View(df)
fit <- lm(df$weight ~ df$Time)
ift
fit
x = seq(1:200)
x1 = seq(2:200)
lm(x ~ x1)
lm(x[2:] ~ x1)
x[2:]
x[2,]
x[2]
x[2:200]
lm(x[2:200] ~ x1)
?lag
lag(x, 1)
x = seq(1:200)
x1 = lag(x, 1)
x2 = lag(x, 2)
df = data.frame(x, x1, x2)
x = seq(1:200)
x1 = lag(x, 1)
x2 = lag(x, 2)
df = data.frame(x, x1, x2)
lag(x, 2)
ts(x)
x = ts(seq(1:200))
x1 = lag(x, 1)
x2 = lag(x, 2)
df = data.frame(x, x1, x2)
x = ts(seq(1:200))
x1 = lag(x, 1)
x2 = lag(x, 2)
x = ts(seq(1:10))
x1 = lag(x, 1)
x1[0:9]
x1[1:9]
x1[1:10]
x1[0]
x2 = lag(x, 2)
x2[0]
x2[-1]
x[-2]
x[-1]
x[-2]
x[-1][-1]
x = tsp(seq(1:10))
tsData <- EuStockMarkets[, 1]
tsData
decomposeRes <- decompose(tsData, type="mult")
decomposeRes
plot(decomposeRes)
View(EuStockMarkets)
tsData <- EuStockMarkets[, 1]
acf(tsData)
pacf(tsData)
n = length(tsData)
lm(tsData[2:n] ~ tsData[1:n-1])
lm(tsData[3:n] ~ tsData[2:n-1] + tsData[1:n-2])
n - 1 + 2
n - 3
n
n - 3 + 1
length(tsData[3:n])
length(tsData[2:n-1)
length(tsData[2:n-1])
length(tsData[1:n-2])
length(tsData[1:n-2])
tsData[1:n-2]
tsData[1:(n-1)]
lm(tsData[3:n] ~ tsData[2:(n-1)] + tsData[1:(n-2])])
lm(tsData[3:n] ~ tsData[2:(n-1)] + tsData[1:(n-2)])
lag(tsData, 2)
length(lag(tsData, 2))
length(lag(tsData, 3))
tsData1 = lag(tsData, 1)
tsData2 = lag(tsData, 2)
lm(tsData ~ tsData1 + tsData2)
lm(tsData ~ tsData1 )
a = seq(1:10)
shift(a, 1, type="lag")
library(data.table)
shift(a, 1, type="lag")
shift(a, 2, type="lag")
quit()
quit()
getwd()
quit()
library(dplyr)
library(tidyverse)
View(AirPassengers)
View(airquality)
quit()
source("C:/Users/ARUN PALANIAPPAN/Desktop/FCI/Final Work/make_datasets.R")
states = ur$State.UT
over_util_count = under_util_count = optimal_util_count = c()
for(state in states)
{
data_points = ur[which(ur$State.UT == state),]
data_points = data_points[names(data_points)[-1]]
over_util_count = c(over_util_count, length(which(data_points > 1)))
under_util_count = c(under_util_count, length(which(data_points < 0.7)))
optimal_util_count = c(optimal_util_count, length(which(data_points <= 1 & data_points >= 0.7)))
}
ur$over_util_count = over_util_count
ur$under_util_count = under_util_count
ur$optimal_util_count = optimal_util_count
print (paste('Utilisation ratio for nation 2003-2019',sum(state_ao$offtake) / sum(state_ao$allotment)))
fit <- lm(utilisation_ratio ~ ro_log_length, ao_road)
summary(fit)$r.squared
fit <- lm(utilisation_ratio ~ ro_log_length, ao_road)
ao_road = inner_join(all_off, road_l, by=c('State.UT', 'year'))
ao_road$offtake = ao_road$allotment = ao_road$zone = NULL
ao_road = inner_join(ao_road, roadd_sqkm, by=c('State.UT', 'year'))
ao_road = ao_road[which(ao_road$utilisation_ratio < 1 & ao_road$utilisation_ratio > 0),]
ao_road = inner_join(all_off, road_l, by=c('State.UT', 'year'))
ao_road$offtake = ao_road$allotment = ao_road$zone = NULL
ao_road = inner_join(ao_road, roadd_sqkm, by=c('State.UT', 'year'))
ao_road = ao_road[which(ao_road$utilisation_ratio < 1 & ao_road$utilisation_ratio > 0),]
fit <- lm(utilisation_ratio ~ ro_log_length, ao_road)
summary(fit)$r.squared
fit <- lm(utilisation_ratio ~ ro_log_length + ro_length, ao_road)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ ro_log_length + ro_log_density, ao_road)
summary(fit)$r.squared
fit
ao_sh = inner_join(all_off, sh_l, by=c('State.UT', 'year'))
ao_sh$offtake = ao_sh$allotment = ao_sh$zone = NULL
ao_sh = inner_join(ao_sh, sh_d, by=c('State.UT', 'year'))
ao_sh = ao_sh[which(ao_sh$utilisation_ratio < 1 & ao_sh$utilisation_ratio > 0),]
fit <- lm(utilisation_ratio ~ sh_log_length, ao_sh)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ sh_log_length + sh_log_density, ao_sh)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ ro_log_length, ao_road)
summary(fit)$r.squared
fit
ao_sh = inner_join(all_off, sh_l, by=c('State.UT', 'year'))
ao_sh$offtake = ao_sh$allotment = ao_sh$zone = NULL
ao_sh = inner_join(ao_sh, sh_d, by=c('State.UT', 'year'))
ao_sh = ao_sh[which(ao_sh$utilisation_ratio < 1 & ao_sh$utilisation_ratio > 0),]
fit <- lm(utilisation_ratio ~ sh_log_length, ao_sh)
summary(fit)$r.squared
fit
ao_rail = inner_join(all_off, rw_l, by=c('State.UT', 'year'))
ao_rail$offtake = ao_rail$allotment = ao_rail$zone = NULL
ao_rail = inner_join(ao_rail, rw_d, by=c('State.UT', 'year'))
ao_rail = ao_rail[which(ao_rail$utilisation_ratio < 1 & ao_rail$utilisation_ratio > 0),]
fit <- lm(utilisation_ratio ~ rw_length, ao_rail)
summary(fit)$r.squared
fit
#Analysis 7 - with state GSDP
ao_gsdp = inner_join(all_off, gsdp, by=c('State.UT', 'year'))
ao_gsdp = ao_gsdp[which(ao_gsdp$utilisation_ratio < 1 & ao_gsdp$utilisation_ratio > 0),]
#Analysis 6 - with railway density
ao_rwd = inner_join(all_off, rw_d, by=c('State.UT', 'year'))
cor(ao_rwd$utilisation_ratio, ao_rwd$rw_density)
cor(ao_rwd$utilisation_ratio, ao_rwd$rw_log_density)
fit <- lm(utilisation_ratio ~ log(rw_length), ao_rail)
summary(fit)$r.squared
fit
summary(fit)$r.squared
View(ao_rail)
ao_rail = inner_join(all_off, rw_l, by=c('State.UT', 'year'))
ao_rail$offtake = ao_rail$allotment = ao_rail$zone = NULL
ao_rail = inner_join(ao_rail, rw_d, by=c('State.UT', 'year'))
ao_rail = ao_rail[which(ao_rail$utilisation_ratio < 1 & ao_rail$utilisation_ratio > 0),]
fit <- lm(utilisation_ratio ~ rw_log_length, ao_rail)
summary(fit)$r.squared
fit
dim(sh)
dim(sh_l)
dim(rw_l)
sh_rail = inner_join(sh_l, ao_rail, by=c('State.UT', 'year', 'utilisation_ratio'))
sh_rail = inner_join(sh_l, ao_rail, by=c('State.UT', 'year'))
View(sh_rail)
fit <- lm(utilisation_ratio ~ sh_log_length + rw_log_length, sh_rail)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ sh_log_denisty + rw_log_density, sh_rail)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ sh_log_density + rw_log_density, sh_rail)
summary(fit)$r.squared
fit
dim(sh_d)
dim(sh_l)
fit <- lm(utilisation_ratio ~ sh_length + rw_length, sh_rail)
summary(fit)$r.squared
fit
sh_rail = inner_join(sh_d, ao_rail, by=c('State.UT', 'year'))
fit <- lm(utilisation_ratio ~ sh_log_density + rw_log_density, sh_rail)
summary(fit)$r.squared
fit
ao_road = inner_join(all_off, road_l, by=c('State.UT', 'year'))
ao_road$offtake = ao_road$allotment = ao_road$zone = NULL
ao_road = inner_join(ao_road, roadd_sqkm, by=c('State.UT', 'year'))
ao_road = ao_road[which(ao_road$utilisation_ratio < 1 & ao_road$utilisation_ratio > 0),]
fit <- lm(utilisation_ratio ~ ro_log_length, ao_road)
summary(fit)$r.squared
fit
#Analysis 7 - with state GSDP
ao_gsdp = inner_join(all_off, gsdp, by=c('State.UT', 'year'))
ao_gsdp = ao_gsdp[which(ao_gsdp$utilisation_ratio < 1 & ao_gsdp$utilisation_ratio > 0),]
cor(ao_gsdp$log_gsdp, ao_gsdp$utilisation_ratio)
cor(ao_gsdp$gsdp, ao_gsdp$utilisation_ratio)
View(ao_gsdp)
fit <- lm(utilisation_ratio ~ gsdp, ao_gsdp)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ log_gsdp, ao_gsdp)
summary(fit)$r.squared
fit
#Analysis 8 - With DO Count
sao = sao[which(sao$utilisation_ratio < 1 & sao$utilisation_ratio > 0),]
View(sao)
fit <- lm(utilisation_ratio ~ do_count, sao)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ log(do_count), sao)
summary(fit)$r.squared
fit
fit <- lm(utilisation_ratio ~ do_count, sao)
summary(fit)$r.squared
fit
#Performing t-test for DCP [Resource : https://statistics.berkeley.edu/computing/r-t-tests]
dcp1 = df_dcp %>% filter(dcp == 1) %>% select(dcp, utilisation_ratio)
dcp0 = df_dcp %>% filter(dcp == 0) %>% select(dcp, utilisation_ratio)
dcp1 = df_dcp %>% filter(dcp == 1) %>% select(dcp, utilisation_ratio)
dcp0 = df_dcp %>% filter(dcp == 0) %>% select(dcp, utilisation_ratio)
t.test(dcp1$utilisation_ratio, dcp0$utilisation_ratio)

wsp = inner_join(bpl, w_sw, on=c("State.UT", "year"))
wsp <- remove_outliers(wsp, c("allotment", "bpl_pop"))
fit <- lm(wsp$allotment ~ wsp$bpl_pop)
ssr_ = sum(fit$residuals ^ 2)
bpl_change_rate = c(bpl_change_rate, bpl_cr)
ssr = c(ssr, ssr_)
}
plot(bpl_change_rate, ssr, xlab="BPL Change rate", ylab="SSR", main="BPL Pop & Allotment")
bpl_cr = bpl_change_rate[which(ssr == min(ssr))]
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
wsp = inner_join(bpl, w_sw, on=c("State.UT", "year"))
wsp <- remove_outliers(wsp, c("allotment", "bpl_pop"))
fit <- lm(wsp$allotment ~ wsp$bpl_pop)
summary(fit)$r.squared
#WHEAT
wheat_state_list = rice_wheat[which(rice_wheat$perc_wheat > 0.9),]$State.UT
w_sw = wheat[which(wheat$State.UT %in% wheat_state_list), ]
#Wheat and population
wsp = inner_join(w_sw, pop, by=c('State.UT', 'year'))
fit <- lm(allotment ~ Population, wsp)
summary(fit)$r.squared
#Wheat and bpl population
bpl_change_rate = c()
ssr = c()
for(bpl_cr in seq(-1, 2, 0.05))
{
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
wsp = inner_join(bpl, w_sw, on=c("State.UT", "year"))
wsp <- remove_outliers(wsp, c("allotment", "bpl_pop"))
fit <- lm(wsp$allotment ~ wsp$bpl_pop)
ssr_ = sum(fit$residuals ^ 2)
bpl_change_rate = c(bpl_change_rate, bpl_cr)
ssr = c(ssr, ssr_)
}
plot(bpl_change_rate, ssr, xlab="BPL Change rate", ylab="SSR", main="BPL Pop & Allotment")
bpl_cr = bpl_change_rate[which(ssr == min(ssr))]
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
wsp = inner_join(bpl, w_sw, on=c("State.UT", "year"))
wsp <- remove_outliers(wsp, c("allotment", "bpl_pop"))
fit <- lm(wsp$allotment ~ wsp$bpl_pop)
summary(fit)$r.squared
names(summary(fit))
summary(fit)$cov.unscaled
summary(fit)
x = seq(1:100)
y = 3 * x
fit <- lm(y ~ x)
summary(fit)fit
summary(fit)
#RICE
rice_state_list = rice_wheat[which(rice_wheat$perc_rice > 0.3),]$State.UT
r_sw = rice[which(rice$State.UT %in% rice_state_list), ]
rsp = inner_join(r_sw, pop, by=c('State.UT', 'year'))
cor(rsp$Population, rsp$allotment)
fit <- lm(allotment ~ Population, rsp)
fit
summary(fit)
#Rice and bpl population
bpl_change_rate = c()
ssr = c()
for(bpl_cr in seq(-1, 3, 0.05))
{
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
rsp = inner_join(bpl, r_sw, on=c("State.UT", "year"))
rsp <- remove_outliers(rsp, c("allotment", "bpl_pop"))
fit <- lm(rsp$allotment ~ rsp$bpl_pop)
ssr_ = sum(fit$residuals ^ 2)
bpl_change_rate = c(bpl_change_rate, bpl_cr)
ssr = c(ssr, ssr_)
}
plot(bpl_change_rate, ssr, xlab="BPL Change rate", ylab="SSR", main="BPL Pop & Allotment")
bpl_cr = bpl_change_rate[which(ssr == min(ssr))]
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
rsp = inner_join(bpl, r_sw, on=c("State.UT", "year"))
rsp <- remove_outliers(rsp, c("allotment", "bpl_pop"))
fit <- lm(rsp$allotment ~ rsp$bpl_pop)
summary(fit)$r.squared
summary(fit)
#WHEAT
wheat_state_list = rice_wheat[which(rice_wheat$perc_wheat > 0.5),]$State.UT
w_sw = wheat[which(wheat$State.UT %in% wheat_state_list), ]
wsp = inner_join(w_sw, pop, by=c('State.UT', 'year'))
fit <- lm(allotment ~ Population, wsp)
summary(fit)$r.squared
summary(fit)
#WHEAT
wheat_state_list = rice_wheat[which(rice_wheat$perc_wheat > 0.5),]$State.UT
w_sw = wheat[which(wheat$State.UT %in% wheat_state_list), ]
bpl_change_rate = c()
ssr = c()
for(bpl_cr in seq(-1, 2, 0.05))
{
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
wsp = inner_join(bpl, w_sw, on=c("State.UT", "year"))
wsp <- remove_outliers(wsp, c("allotment", "bpl_pop"))
fit <- lm(wsp$allotment ~ wsp$bpl_pop)
ssr_ = sum(fit$residuals ^ 2)
bpl_change_rate = c(bpl_change_rate, bpl_cr)
ssr = c(ssr, ssr_)
}
plot(bpl_change_rate, ssr, xlab="BPL Change rate", ylab="SSR", main="BPL Pop & Allotment")
bpl_cr = bpl_change_rate[which(ssr == min(ssr))]
bpl = generate_bpl_data(pop, bpl_perc2011, bpl_cr)
wsp = inner_join(bpl, w_sw, on=c("State.UT", "year"))
wsp <- remove_outliers(wsp, c("allotment", "bpl_pop"))
fit <- lm(wsp$allotment ~ wsp$bpl_pop)
summary(fit)$r.squared
summary(fit)
## Prediction with previous year offtake
View(rice)
## Prediction with previous year offtake
View(rice)
for(state in unique(rice$State.UT))
{
print (state)
# for(year in c(2004:2019))
# {
#   idx = which(ao$State.UT == state & ao$year == year)
#   idx2 = which(ao$State.UT == state & ao$year == year-1)
#   if(length(idx) > 0 & length(idx2) > 0){
#     ao[idx, ]$allotment_prev_year = ao[idx2, ]$allotment
# }
}
# }
for(state in unique(rice$State.UT))
{
for(year in c(2004:2019))
{
idx = which(ao$State.UT == state & ao$year == year)
idx2 = which(ao$State.UT == state & ao$year == year-1)
if(length(idx) > 0 & length(idx2) > 0)
{
ao[idx, ]$allotment_prev_year = ao[idx2, ]$allotment
}
}
}
rice$allotment_prev_year = 0
for(state in unique(rice$State.UT))
{
for(year in c(2004:2019))
{
idx = which(rice$State.UT == state & rice$year == year)
idx2 = which(rice$State.UT == state & rice$year == year-1)
if(length(idx) > 0 & length(idx2) > 0)
{
rice[idx, ]$allotment_prev_year = rice[idx2, ]$allotment
}
}
}
dim(rice)
rice = rice %>% filter(year > 2003)
dim(rice)
rice <- read.xlsx("rice.xlsx")
ri = rice
ri$allotment_prev_year = 0
for(state in unique(ri$State.UT))
{
for(year in c(2004:2019))
{
idx = which(ri$State.UT == state & ri$year == year)
idx2 = which(ri$State.UT == state & ri$year == year-1)
if(length(idx) > 0 & length(idx2) > 0)
{
ri[idx, ]$allotment_prev_year = ri[idx2, ]$allotment
}
}
}
View(ri)
ri = ri %>% filter(year > 2003, allotment > 0)
ri = ri %>% filter(year > 2003, allotment > 0, allotment_prev_year > 0)
fit <- lm(ri$allotment ~ ri$allotment_prev_year)
fit
summary(fit)$r.squared
View(all_off)
#Analysis with total allotment
ao_pop = inner_join(all_off, popm by=c('State.UT', 'year'))
#Analysis with total allotment
ao_pop = inner_join(all_off, pop, by=c('State.UT', 'year'))
lm(ao_pop$allotment ~ ao_pop$Population)
summary(fit)$r.squared
ao_pop = inner_join(all_off, pop, by=c('State.UT', 'year'))
fit <- lm(ao_pop$allotment ~ ao_pop$Population)
summary(fit)$r.squared
fit <- lm(ri$allotment ~ ri$allotment_prev_year)
summary(fit)$r.squared
#RICE
rice_state_list = rice_wheat[which(rice_wheat$perc_rice > 0),]$State.UT
r_sw = rice[which(rice$State.UT %in% rice_state_list), ]
#Rice and population
rsp = inner_join(r_sw, pop, by=c('State.UT', 'year'))
View(rsp)
mean(rsp$allotment)
max(rsp$allotment)
quantile(rsp$allotment, 50)
quantile(rsp$allotment, 0.5)
quantile(rsp$allotment, 1)
hist(rsp$allotment)
sd(rsp$allotment)
#Rice model used for prediction
rice_fit <- lm(allotment ~ Population, rsp)
#Wheat model used for prediction
wheat_fit <- lm(allotment ~ Population, wsp)
rice_fit
prediction_data = pop %>% filter(year > 2019  & year < 2025)
View(prediction_data)
prediction_data$rice_allotment = predict(model, prediction_data)
prediction_data$rice_allotment = predict(rice_model, prediction_data)
#Wheat model used for prediction
wheat_model <- lm(allotment ~ Population, wsp)
#Rice model used for prediction
rice_model <- lm(allotment ~ Population, rsp)
prediction_data$rice_allotment = predict(rice_model, prediction_data)
prediction_data$log_pop = NULL
#To give a confidence level of estimates, modify the code by making population as pop * 0.95, pop*1.05
#for 10% confidence
prediction_data$rice_allotment = predict(rice_model, prediction_data)
?spread
prediction_data %>% spread(key=c(2021, 2022))
#To give a confidence level of estimates, modify the code by making population as pop * 0.95, pop*1.05
#for 10% confidence
rice_prediction$predicted_allotment = predict(rice_model, prediction_data)
#Prediction for rice
prediction_data$predicted_allotment = predict(rice_model, prediction_data)
prediction_data %>% spread(key="year")
a = prediction_data
a %>% spread(year)
a %>% spread(year, "rice prediction")
a %>% spread(year, rice_allotment)
a = a %>% spread(year, rice_allotment)
View(a)
a = prediction_data
a = a %>% spread(c("year", "State.UT"), rice_allotment)
a = a %>% spread(year, rice_allotment, -one_of("State.UT"))
a = prediction_data
a = a %>% spread(year, rice_allotment, -one_of("State.UT"))
a = prediction_data
a = a %>% spread(year, rice_allotment)
View(spread(a, year, rice_allotment))
a = prediction_data
View(spread(a, year, rice_allotment))
View(spread(a, State.UT, rice_allotment))
?mutate
?unite
a %>% spread(year, rice_allotment) %>% unite(c(2020, 2021, 2022, 2023, 2024))
a = prediction_data
a = a %>% spread(year, rice_allotment) %>% unite(c(2020, 2021, 2022, 2023, 2024))
View(a)
a = a %>% spread(year, rice_allotment, -c("State.UT"))
a = prediction_data
a = a %>% spread(year, rice_allotment, -c("State.UT"))
a = a %>% spread(year, rice_allotment, -State.UT)
a = prediction_data
a = a %>% spread(year, rice_allotment, -State.UT)
View(a)
a = a %>% spread(year, rice_allotment)
View(a)
a = prediction_data
View(a)
a = prediction_data
a = a %>% spread(State.UT, rice_allotment)
View(a)
a = prediction_data
a = a %>% spread(year, rice_allotment)
View(a)
a = prediction_data
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
#Prediction for rice
prediction_data$predicted_allotment = predict(rice_model, prediction_data)
a = prediction_data
seq(2021:2031)
c(2021:2031)
c(2021:203)
c(2021:2030)
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
#Prediction for rice
prediction_data$predicted_allotment = predict(rice_model, prediction_data)
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
a = predicted_data %>% filter(year == 2021)
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
a = prediction_data %>% filter(year == 2021)
prediction_data$Population = NULL
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
a = prediction_data %>% filter(year == 2021)
View(a)
names(a)[which(names(a) == "predicted_allotment")] = 2021
rice_prediction = prediction_data %>% filter(year == 2021)
names(rice_prediction)[which(names(rice_prediction) == "predicted_allotment")] = 2021
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
names(temp)[which(names(temp) == "predicted_allotment")] = ye
rice_prediction = inner_join(rice_prediction, temp, by=c('State.UT'))
}
View(rice_prediction)
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
rice_prediction = prediction_data %>% filter(year == 2021)
names(rice_prediction)[which(names(rice_prediction) == "predicted_allotment")] = 2021
rice_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
rice_prediction = inner_join(rice_prediction, temp, by=c('State.UT'))
}
View(rice_prediction)
write.xlsx(rice_prediction, "rice_prediction.xlsx")
#Making predictions for wheat
prediction_data$predicted_allotment = predict(wheat_model, prediction_data)
#Making predictions for wheat
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
prediction_data$predicted_allotment = predict(wheat_model, prediction_data)
prediction_data$Population = NULL
wheat_prediction = prediction_data %>% filter(year == 2021)
wheat_prediction = prediction_data %>% filter(year == 2021)
names(wheat_prediction)[which(names(wheat_prediction) == "predicted_allotment")] = 2021
wheat_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
wheat_prediction = inner_join(wheat_prediction, temp, by=c('State.UT'))
}
write.xlsx(wheat_prediction, "wheat_prediction.xlsx")
View(wheat_prediction)
#Prediction for rice
prediction_data$predicted_allotment = predict(rice_model, prediction_data)
prediction_data$Population = NULL
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
rice_prediction = prediction_data %>% filter(year == 2021)
names(rice_prediction)[which(names(rice_prediction) == "predicted_allotment")] = 2021
rice_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
rice_prediction = inner_join(rice_prediction, temp, by=c('State.UT'))
}
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
rice_prediction = prediction_data %>% filter(year == 2021)
rbind(rice_prediction, c(1, 2, 3, 4, 5))
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
#To give a confidence level of estimates, modify the code by making population as pop * 0.95, pop*1.05
#for 10% confidence
#Prediction for rice
prediction_data$predicted_allotment = predict(rice_model, prediction_data)
prediction_data$Population = NULL
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
rice_prediction = prediction_data %>% filter(year == 2021)
names(rice_prediction)[which(names(rice_prediction) == "predicted_allotment")] = 2021
rice_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
rice_prediction = inner_join(rice_prediction, temp, by=c('State.UT'))
}
rbind(rice_prediction, c(1, 2, 3, 4, 5))
rp = rbind(rice_prediction, c(1, 2, 3, 4, 5))
View(rp)
rice_prediction[2021]
year = 2021
rice_prediction[[year]]
year = 2021
rice_prediction[[year]]
rice_prediction[year]
year = str(2021)
rice_prediction$year
year = str(2021)
rice_prediction[[year]]
rice_prediction[year]
rice_prediction[[year]]
rice_prediction[[[year]]]
names(rice_prediction)[2:]
names(rice_prediction)[2]
names(rice_prediction)[2:,]
names(rice_prediction)[2]
names(rice_prediction)
year = names(rice_prediction)[2]
rice_prediction[year]
sum(rice_prediction[year])
all_india = c("All India")
for(i in seq(1:10))
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
}
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
}
all_india = c("All India")
for(i in seq(1:10))
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
}
{}
)
all_india = c("All India")
for(i in seq(1:10))
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
}
rice_prediction = rbind(rice_prediction, all_india)
all_india = c("All India")
for(i in seq(1:10))
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
}
rice_prediction = rbind(rice_prediction, all_india)
write.xlsx(rice_prediction, "rice_prediction.xlsx")
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
#To give a confidence level of estimates, modify the code by making population as pop * 0.95, pop*1.05
#for 10% confidence
#Prediction for rice
prediction_data$predicted_allotment = predict(rice_model, prediction_data)
prediction_data$Population = NULL
#Making the years into column wise. A better shorter code could be written using spread()
# and tidyr but note getting desired result because the columns where spread
#year wise with multiple rows for a state. Each state should be in a row.
rice_prediction = prediction_data %>% filter(year == 2021)
names(rice_prediction)[which(names(rice_prediction) == "predicted_allotment")] = 2021
rice_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
rice_prediction = inner_join(rice_prediction, temp, by=c('State.UT'))
}
all_india = c("All India")
for(i in seq(1:10))
{
year = names(rice_prediction)[i+1]
all_india = c(all_india, sum(rice_prediction[year]))
}
rice_prediction = rbind(rice_prediction, all_india)
write.xlsx(rice_prediction, "rice_prediction.xlsx")
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
prediction_data$predicted_allotment = predict(wheat_model, prediction_data)
prediction_data$Population = NULL
wheat_prediction = prediction_data %>% filter(year == 2021)
names(wheat_prediction)[which(names(wheat_prediction) == "predicted_allotment")] = 2021
wheat_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
wheat_prediction = inner_join(wheat_prediction, temp, by=c('State.UT'))
}
all_india = c("All India")
for(i in seq(1:10))
{
year = names(wheat_prediction)[i+1]
all_india = c(all_india, sum(wheat_prediction[year]))
}
wheat_prediction = rbind(wheat_prediction, all_india)
write.xlsx(wheat_prediction, "wheat_prediction.xlsx")
#Making predictions for wheat
prediction_data = pop %>% filter(year > 2020  & year < 2031)
prediction_data$log_pop = NULL
prediction_data$predicted_allotment = predict(wheat_model, prediction_data)
prediction_data$Population = NULL
wheat_prediction = prediction_data %>% filter(year == 2021)
names(wheat_prediction)[which(names(wheat_prediction) == "predicted_allotment")] = 2021
wheat_prediction$year = NULL
for(ye in c(2022:2030))
{
temp = prediction_data %>% filter(year == ye)
temp$year = NULL
names(temp)[which(names(temp) == "predicted_allotment")] = ye
wheat_prediction = inner_join(wheat_prediction, temp, by=c('State.UT'))
}
all_india = c("All India")
for(i in seq(1:10))
{
year = names(wheat_prediction)[i+1]
all_india = c(all_india, sum(wheat_prediction[year]))
}
wheat_prediction = rbind(wheat_prediction, all_india)
write.xlsx(wheat_prediction, "wheat_prediction.xlsx")
quit()
